# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.couriers_ids_couriers import CouriersIdsCouriers  # noqa: F401,E501
from swagger_server import util


class OrdersIds(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, orders: List[CouriersIdsCouriers]=None):  # noqa: E501
        """OrdersIds - a model defined in Swagger

        :param orders: The orders of this OrdersIds.  # noqa: E501
        :type orders: List[CouriersIdsCouriers]
        """
        self.swagger_types = {
            'orders': List[CouriersIdsCouriers]
        }

        self.attribute_map = {
            'orders': 'orders'
        }
        self._orders = orders

    @classmethod
    def from_dict(cls, dikt) -> 'OrdersIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrdersIds of this OrdersIds.  # noqa: E501
        :rtype: OrdersIds
        """
        return util.deserialize_model(dikt, cls)

    @property
    def orders(self) -> List[CouriersIdsCouriers]:
        """Gets the orders of this OrdersIds.


        :return: The orders of this OrdersIds.
        :rtype: List[CouriersIdsCouriers]
        """
        return self._orders

    @orders.setter
    def orders(self, orders: List[CouriersIdsCouriers]):
        """Sets the orders of this OrdersIds.


        :param orders: The orders of this OrdersIds.
        :type orders: List[CouriersIdsCouriers]
        """
        if orders is None:
            raise ValueError("Invalid value for `orders`, must not be `None`")  # noqa: E501

        self._orders = orders
