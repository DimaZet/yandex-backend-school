# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.couriers_ids_couriers import CouriersIdsCouriers  # noqa: F401,E501
from swagger_server import util


class CouriersIds(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, couriers: List[CouriersIdsCouriers]=None):  # noqa: E501
        """CouriersIds - a model defined in Swagger

        :param couriers: The couriers of this CouriersIds.  # noqa: E501
        :type couriers: List[CouriersIdsCouriers]
        """
        self.swagger_types = {
            'couriers': List[CouriersIdsCouriers]
        }

        self.attribute_map = {
            'couriers': 'couriers'
        }
        self._couriers = couriers

    @classmethod
    def from_dict(cls, dikt) -> 'CouriersIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CouriersIds of this CouriersIds.  # noqa: E501
        :rtype: CouriersIds
        """
        return util.deserialize_model(dikt, cls)

    @property
    def couriers(self) -> List[CouriersIdsCouriers]:
        """Gets the couriers of this CouriersIds.


        :return: The couriers of this CouriersIds.
        :rtype: List[CouriersIdsCouriers]
        """
        return self._couriers

    @couriers.setter
    def couriers(self, couriers: List[CouriersIdsCouriers]):
        """Sets the couriers of this CouriersIds.


        :param couriers: The couriers of this CouriersIds.
        :type couriers: List[CouriersIdsCouriers]
        """
        if couriers is None:
            raise ValueError("Invalid value for `couriers`, must not be `None`")  # noqa: E501

        self._couriers = couriers
